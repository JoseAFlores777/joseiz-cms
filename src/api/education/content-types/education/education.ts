// Interface automatically generated by schemas-to-ts

import { LinkedEntity } from '../../../linked-entity/content-types/linked-entity/linked-entity';
import { Achievement } from '../../../achievement/content-types/achievement/achievement';
import { Project } from '../../../project/content-types/project/project';
import { LinkedEntity_Plain } from '../../../linked-entity/content-types/linked-entity/linked-entity';
import { Achievement_Plain } from '../../../achievement/content-types/achievement/achievement';
import { Project_Plain } from '../../../project/content-types/project/project';
import { AdminPanelRelationPropertyModification } from '../../../../common/schemas-to-ts/AdminPanelRelationPropertyModification';

export enum EducationType {
  Bachelor = 'Bachelor',
  Master = 'Master',
  PhD = 'PhD',
  Diploma = 'Diploma',
  Certificate = 'Certificate',
  OnlineCourse = 'Online Course',
  Bootcamp = 'Bootcamp',
  Workshop = 'Workshop',
  SelfStudy = 'Self-Study',}
export enum Modality {
  Remote = 'Remote',
  Hybrid = 'Hybrid',
  OnSite = 'On-site',}

export interface Education {
  id: number;
  attributes: {
    createdAt: Date;    updatedAt: Date;    publishedAt?: Date;    title?: string;
    educationType?: EducationType;
    modality?: Modality;
    startDate?: Date;
    endDate?: Date;
    inProgress?: boolean;
    description?: string;
    institution?: { data: LinkedEntity };
    achievement?: { data: Achievement };
    relatedProjects: { data: Project[] };
    onPortfolio?: boolean;
    onCV?: boolean;
    educationLocation?: any;
    locale: string;
    localizations?: { data: Education[] };
  };
}
export interface Education_Plain {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  title?: string;
  educationType?: EducationType;
  modality?: Modality;
  startDate?: Date;
  endDate?: Date;
  inProgress?: boolean;
  description?: string;
  institution?: LinkedEntity_Plain;
  achievement?: Achievement_Plain;
  relatedProjects: Project_Plain[];
  onPortfolio?: boolean;
  onCV?: boolean;
  educationLocation?: any;
  locale: string;
  localizations?: Education[];
}

export interface Education_NoRelations {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  title?: string;
  educationType?: EducationType;
  modality?: Modality;
  startDate?: Date;
  endDate?: Date;
  inProgress?: boolean;
  description?: string;
  institution?: number;
  achievement?: number;
  relatedProjects: number[];
  onPortfolio?: boolean;
  onCV?: boolean;
  educationLocation?: any;
  locale: string;
  localizations?: Education[];
}

export interface Education_AdminPanelLifeCycle {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  title?: string;
  educationType?: EducationType;
  modality?: Modality;
  startDate?: Date;
  endDate?: Date;
  inProgress?: boolean;
  description?: string;
  institution?: AdminPanelRelationPropertyModification<LinkedEntity_Plain>;
  achievement?: AdminPanelRelationPropertyModification<Achievement_Plain>;
  relatedProjects: AdminPanelRelationPropertyModification<Project_Plain>;
  onPortfolio?: boolean;
  onCV?: boolean;
  educationLocation?: any;
  locale: string;
  localizations?: Education[];
}
